#!/bin/sh

# webpack_config.js
webpack_config_js='var path = require("path");\n
\n
module.exports = {\n
  context: __dirname,\n
  entry: "./frontend/entry.jsx",\n
  output: {\n
    path: path.join(__dirname, "app", "assets", "javascripts"),\n
    filename: "bundle.js"\n
  },\n
  resolve: {\n
    extensions: ["", ".js", ".jsx"]\n
  },\n
  module: {\n
    loaders: [\n
      {\n
        test: /\.jsx?$/,\n
        exclude: /(node_modules|bower_components)/,\n
        loader: "babel",\n
        query: {\n
          presets: ["react", "es2015"]\n
        }\n
      },\n
      {\n
        test: /\.node$/,\n
        loader: "node-loader"\n
      }\n
    ]\n
  }\n
};\n
'

# entry.jsx
entry_jsx="var React = require('react');\n
var ReactDOM = require('react-dom');\n
var Router = require('react-router').Router;\n
var Route = require('react-router').Route;\n
var HashHistory = require('react-router').hashHistory;\n
\n
var App = require('./components/app.jsx');\n
\n
var routes = (\n
\t<Route path='/' component={App}>\n
\t</Route>\n
);\n
\n
document.addEventListener('DOMContentLoaded', function () {\n
\tReactDOM.render(\n
\t\t<Router history={HashHistory}>{routes}</Router>,\n
\t\tdocument.getElementById('root')\n
\t);\n
});\n
"

# app.jsx
app_jsx="var React = require('react');\n
\n
module.exports = React.createClass({\n
\trender: function () {\n
\t\treturn(\n
\t\t\t<div>\n
\t\t\t\tHello World!\n
\t\t\t\t{this.props.children}\n
\t\t\t</div>\n
\t\t);\n
\t}\n
});\n
"

# server_actions.js
server_actions="var Dispatcher = require('../dispatcher/dispatcher.js');\n
// Example Constants call\n
// var PokemonConstants = require('../constants/pokemonConstants.js');\n
\n
var ServerActions = {\n
// Example Function\n
//  receiveAllPokemons: function (pokemons) {\n
//    Dispatcher.dispatch({\n
//      actionType: PokemonConstants.POKEMONS_RECEIVED,\n
//      pokemons: pokemons\n
//    });\n
//  }\n
}\n
\n
module.exports = ServerActions;
"

# client_actions.js
client_actions="var ApiUtil = require('../util/apiUtil.js');\n
\n
ClientActions = {\n
// Example Function\n
//  fetchAllPokemons: function() {\n
//    ApiUtil.fetchAllPokemons();\n
//  }\n
}\n
\n
module.exports = ClientActions;
"

#dispatcher.js
dispatcher="var Dispatcher = require('flux').Dispatcher;\n
module.exports = new Dispatcher();"

# api_util.js
api_utils="var ServerActions = require('../actions/serverActions.js');\n
\n
module.exports = {\n
// Example Function\n
//  createPokemon: function (pokemon, callback) {\n
//    $.ajax({\n
//      url: 'api/pokemon',\n
//      method: 'POST',\n
//      dataType: 'json',\n
//      data: {pokemon: pokemon},\n
//      success: function (pokemon) {\n
//        ServerActions.receiveSinglePokemon(pokemon);\n
//        callback && callback(pokemon.id);\n
//      }\n
//    });\n
//  }\n
}"


#######################################################
# The Code Begins
##############################################

# NPM
npm init --yes
npm install --save babel-core@6.1.4
npm install --save babel-loader@6.1.0
npm install --save babel-preset-es2015@6.6.0
npm install --save babel-preset-react@6.1.4
npm install --save flux@2.1.1
npm install --save react@0.14.2
npm install --save react-addons-linked-state-mixin@0.14.2
npm install --save react-dom@0.14.2
npm install --save react-router@2.0.0
npm install --save webpack@1.12.4

# root route
echo "Rails.application.routes.draw do\n
\troot to: 'static_pages#root.html'\n
end\n
" > config/routes.rb

# webpack.config.js
echo $webpack_config_js > webpack.config.js

# .gitignore node_modules and bundle.js
echo "\n\nnode_modules\nbundle.js" >> .gitignore

# generate static_pages_controller and view
rails generate controller static_pages
echo "<div id='root'></div>" > app/views/static_pages/root.html

  # frontend
  mkdir frontend
  cd frontend

    # entry.jsx
    echo $entry_jsx > entry.jsx

      # frontend subdirectories
      mkdir actions components constants dispatcher stores utils

      # app_jsx
      echo $app_jsx > components/app.jsx

      # server_actions
      echo $server_actions > actions/server_actions.js

      # client_actions
      echo $client_actions > actions/client_actions.js

      # Dispatcher
      echo $dispatcher > dispatcher/dispatcher.js

      # api_utils
      echo $api_utils > utils/api_utils.js

# return from frontend/ to project root
cd ..
